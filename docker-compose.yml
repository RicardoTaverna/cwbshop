version: '3.3'

services:

  eureka-service:
    image: 'cwbshop-api/eureka-service:latest'
    networks:
      - cwbshop-network
    ports:
      - "8761:8761"

  gateway-service:
    image: 'cwbshop-api/gateway-service:latest'
    networks:
      - cwbshop-network
    ports:
      - "8080:8080"
    depends_on:
      - eureka-service
    environment:
      EUREKA_URL: gateway-service
      EUREKA_DEFAULT_ZONE: 'http://eureka-service:8761/eureka'

  cwbshop-service:
    image: 'cwbshop-api/cwbshop-service:latest'
    networks:
      - cwbshop-network
    ports:
      - "8060:8060"
    depends_on:
      - eureka-service
    environment:
      EUREKA_URL: cwbshop-service
      EUREKA_DEFAULT_ZONE: 'http://eureka-service:8761/eureka'

  sonarqube:
    image: sonarqube:6.7.1
    restart: always
    environment:
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=v07IGCFCF83Z95NX
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonarqube
    ports:
      - "9000:9000"
      - "9092:9092"
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

  db:
    image: postgres:10.1
    restart: always
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=v07IGCFCF83Z95NX
      - POSTGRES_DB=sonarqube
    volumes:
      - sonarqube_db:/var/lib/postgresql
      # This needs explicit mapping due to https://github.com/docker-library/postgres/blob/4e48e3228a30763913ece952c611e5e9b95c8759/Dockerfile.template#L52
      - postgresql_data:/var/lib/postgresql/data

volumes:
  postgresql_data:
  sonarqube_bundled-plugins:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_db:
  sonarqube_extensions:

networks:
  cwbshop-network:
    driver: "bridge"